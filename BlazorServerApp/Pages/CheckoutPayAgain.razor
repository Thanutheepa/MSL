@page "/checkoutPayAgain"

@inject ICartService cartService
@inject ILocalStorageService localStore
@inject AppState appState
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@inject IApiService apiService
@inject IProfileService ProfileService
@inject IPaymentService paymentService
@inject IProfileService ProfileService

<div class="container topMargin mb-5">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><NavLink href="/" class="bread"><i class="fas fa-home"></i> Home</NavLink></li>
                    <li class="breadcrumb-item active" aria-current="page">Checkout</li>
                </ol>
            </nav>

        </div>
    </div>
    <div class="row">
        <div class="col-12 text-center py-5">
            <h1 class="mainTitles">Checkout</h1>
        </div>
    </div>
    <div class="container">
        <div class="row fullHeight">
            <div class="col-md-8">
                <div class="loginBox loginBoxDeli py-4">
                    @if (orderStatus)
                    {
                        <div class="alert alert-success" role="alert">
                            Order Successful!
                        </div>
                    }
                    <div class="row">
                        <div class="col-12">
                            <h5><b>Delivery Method</b></h5>
                        </div>
                        <div class="col-12 mt-2 mb-2">
                            @*                          <RadzenRadioButtonList @bind-Value=@deliveryType TValue="int" Orientation="Orientation.Horizontal" @onclick="DeliveryTypeSelect">
                                    <Items>
                                        @if (deliveryType == 1)
                                        {
                                            <RadzenRadioButtonListItem Text="Doorstep Delivery" Value="1" />
                                        }
                                        else if (deliveryType == 2)
                                        {
                                            <RadzenRadioButtonListItem Text="Customer Pick Up" Value="2" />
                                        }
                                    </Items>
                                </RadzenRadioButtonList>*@
                            @if (deliveryType == 1)
                            {
                                <div class="form-check-inline">
                                    <label class="form-check-label">
                                        <img src="images/Icons/Delivery.png" class="smallIcons" /> <input type="radio" class="form-check-input" name="deliType" checked="@(deliveryType == 1)"> Doorstep Delivery (Within 24hrs)
                                    </label>
                                </div>
                            }
                            else if (deliveryType == 2)
                            {
                                <div class="form-check-inline ml-md-5 mt-2 mt-md-0">
                                    <label class="form-check-label">
                                        <img src="images/Icons/Pickup.png" class="smallIcons" /> <input type="radio" class="form-check-input" name="deliType" checked="@(deliveryType == 2)"> Customer Pick Up
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                    @if (deliveryOption > 0)
                    {
                        <div class="row mt-4">
                            <div class="col-12">
                                <h5><b>Delivery Option</b></h5>
                                <p class="text-danger mb-0">*Note: If you are under quarantine, please select 'Leave at door/gate' option.</p>
                            </div>
                            <div class="col-12 mt-2 mb-2">
                                @if (deliveryOption == 2)
                                {
                                    <div class="form-check-inline">
                                        <label class="form-check-label">
                                            <img src="images/Icons/Meet at door.png" class="smallIcons" /> <input type="radio" class="form-check-input" name="deliOption" checked="@(deliveryOption == 2)"> Meet at door/gate
                                        </label>
                                    </div>
                                }
                                else if (deliveryOption == 1)
                                {
                                    <div class="form-check-inline ml-md-5 mt-2 mt-md-0">
                                        <label class="form-check-label">
                                            <img src="images/Icons/Customer.png" class="smallIcons" /> <input type="radio" class="form-check-input" name="deliOption" checked="@(deliveryOption == 1)"> Leave at door/gate (Contactless Delivery)
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="loginBox">
                    <div class="row">
                        <div class="col-12 mb-2">
                            <h5><b>Customer Details</b></h5>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="userName">Name</label>
                                <input type="text" @bind-value="name" class="form-control" id="userName" placeholder="Enter name" readonly>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="nic">Email</label>
                                <input type="email" @bind-value="email" class="form-control" id="nic" placeholder="Enter email" readonly>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="nic">Phone</label>
                                <input type="text" @bind-value="phone" class="form-control" id="nic" placeholder="Enter phone" readonly>
                            </div>
                        </div>
                    </div>
                    @if (deliveryType == 1)
                    {
                        <div class="form-group">
                            <label for="userAddress">Address</label>
                            <textarea class="form-control" id="userAddress" placeholder="Address" @bind="address" readonly></textarea>
                        </div>
                        @* <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label for="userCity">City</label>
                                        <input type="text" @bind-value="city" class="form-control" id="userName" placeholder="Enter city" readonly>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label for="userPostalCode">Postal Code</label>
                                        <input type="text" @bind-value="postalCode" class="form-control" id="userPostalCode" placeholder="Enter postal code" readonly>
                                    </div>
                                </div>
                            </div>*@
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="summeryBox">
                    <h2>Order Summary</h2>
                    <div class="row">
                        <div class="col-12">
                            @if (discountStatus == -1)
                            {
                                <p class="text-danger m-0">No Discount!</p>
                            }
                            else if (discountStatus == 1)
                            {
                                <p class="text-success m-0">Coupon Added!</p>
                            }
                        </div>
                    </div>
                    <hr />
                    @if (order != null)
                    {
                        <h5>Total Items: <font class="text-right float-right">@cartService.GetTotalCount()</font></h5>
                        <h5>Delivery Fee: <font class="text-right float-right">Rs.@String.Format("{0:0.00}", @Math.Round(@deliveryFee, 2))</font></h5>
                        <h5>Item Total: <font class="text-right float-right">Rs.@String.Format("{0:0.00}", @Math.Round(@total, 2))</font></h5>
                        @if (discount > 0)
                        {
                            <h5>Discount: <font class="text-right float-right">Rs.@String.Format("{0:0.00}", @Math.Round(@discount, 2))</font></h5>
                        }
                        <hr />
                        <h2><b>Total: Rs.@String.Format("{0:0.00}", @Math.Round(@fullTotal, 2))</b></h2>
                    }
                    else
                    {
                        <p>Total Items: <font class="text-right float-right">0</font></p>
                        <h3>Total: <font class="text-right float-right">$0</font></h3>
                    }
                    <hr />
                    <h5><b>Payment Method</b></h5>
                    <div class="form-check pl-0 mb-3">
                        <label class="form-check-label">
                            <img src="images/Icons/CardPayments.png" class="smallIcons mr-4" /> <input type="radio" class="form-check-input marginTopRadio" name="pType" checked="@(paymentType==2)"> Card Payment
                        </label>
                    </div>
                    <div class="form-check">
                        <label class="form-check-label termsText">
                            <input type="checkbox" class="form-check-input" @bind="@agreed"><span class="text-danger">I have read and agree to the website</span> <NavLink href="/termsConditions" class="text-dark">terms and conditions</NavLink><span class="text-danger">*</span>
                        </label>
                    </div>
                    @if (!checkedOut)
                    {
                        <button class="btn checkoutBtn w-100 mt-4" @onclick="HandleCheckout">PROCEED TO PAYMENT</button>

                        <p class="text-center mt-2"><NavLink href="@($"/searchPage/null/-1")" class="redText link">Continue Shopping</NavLink></p>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-12 text-center">
                                <img src="images/Loading.gif" width="50" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    private Orders order;
    private List<Address> ShippingAddress = new List<Address>();
    private int selectedOutletId;
    private string name = "";
    private string phone = "";
    private string email = "";
    private string address = "";
    private string note = "";
    private string city =  "";
    private string postalCode = "";
    private string country = "";
    private string province = "";
    private bool orderStatus = false;
    private int paymentType = 2;
    private int deliveryType = 1;
    private int deliveryOption = 2;
    private string coupon = "";
    private double total;
    private double fullTotal;
    private double discount = 0;
    private int discountStatus;
    private double deliveryFee;
    private int itemCount = 0;
    private User user;
    private RegisterUser userRegister = new RegisterUser();
    private string response = "";
    private bool agreed { get; set; } = false;
    private bool checkedOut { get; set; } = false;
    private double totalWeight = 0;


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<object>("NavBarFixed");
            selectedOutletId = await localStore.GetItemAsync<int>("outlet");
            order = await localStore.GetItemAsync<Orders>("payMyOrder");
            if(order != null)
            {
                total = Convert.ToDouble(order.TotalAmount);
                fullTotal = total;
                discount = Convert.ToDouble(order.DiscountAmount);
                deliveryFee = Convert.ToDouble(order.DeliveryFee);
                name = order.CustomerName;
                phone = order.ContactNumber.ToString();
                @*var arr = order.CustomerAddress.Split(',');*@
                address = order.CustomerAddress;
                @*for (int i = 0; i < arr.Length - 2; i++)
                {
                    if(i == arr.Length-3)
                        address += arr[i];
                    else
                        address += arr[i] + ", ";
                }
                city = arr[arr.Length - 2];
                postalCode = arr[arr.Length-1];*@
                itemCount = order.ListOrderDetails.Count();
                deliveryType = order.DeliveryModeId;
                deliveryOption = order.DeliveryOptionId;
                paymentType = order.PaymentTypeId;
                if(discount > 0)
                {
                    discountStatus = 1;
                }
            }
            user = await localStore.GetItemAsync<User>("user");
            if (user != null)
            {
                var registeruser = Task.Run(async () => await ProfileService.GetCustomer(user.CustomerId));
                userRegister = registeruser.Result;

                if (userRegister != null)
                {
                    name = userRegister.CustomerFirstName + " " + userRegister.CustomerLastName;
                    phone = userRegister.CustomerMobileNo;
                    email = userRegister.CustomerEmailAddress;
                    //GetUserAddress(user.CustomerId);
                }

            }
            StateHasChanged();
        }
    }

    private async void HandleCheckout()
    {
       @* if (total >= 2000)
        {*@
            //string fullAddress = address + ", " + city + ", " + postalCode;
            string fullAddress = address;
            if (deliveryType == 1 && ( name == String.Empty || name == "" || name == null || phone == String.Empty || phone == "" || phone == null || address == String.Empty || address == "" || address == null))
            {
                await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the data");
            }
            else if(deliveryType == 2 && (name == String.Empty || name == "" || name == null || phone == String.Empty || phone == "" || phone == null))
            {
                await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the data");
            }
            else if (!agreed)
            {
                await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please read and accept the terms and conditions to proceed with your order.");
            }
            else
            {
                checkedOut = true;
                var orderId = order.OrderID;
                await localStore.SetItemAsync("orderId", orderId);

                name = "";
                address = "";
                city = "";
                phone = "";
                postalCode = "";
                orderStatus = true;

                if (paymentType == 2)
                {

                    PaymentSession PaymentResponse = await paymentService.CreateSession(orderId.ToString(), order.TotalAmount, fullAddress);
                    await localStore.SetItemAsync("paymentIndicator", PaymentResponse.successIndicator);

                    await JSRuntime.InvokeAsync<object>("PaymentGateway", PaymentResponse.SessionId.ToString());
                    await JSRuntime.InvokeAsync<object>("Checkout.showPaymentPage");
                }
                else
                {
                    NavManager.NavigateTo("/paymentSuccess");
                }
            }
       @* }
        else
        {
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Minimum order amount is Rs.2000!");
        }*@
    }

    private async void AddCoupon()
    {
        if (coupon != null && coupon != "")
        {
            double totalN = total + discount;
            var dis = await apiService.GetDiscount(coupon, total.ToString());
            if (dis == "0.0")
            {
                discountStatus = -1;
                discount = 0;
            }
            else
            {
                discountStatus = 1;
                discount = Convert.ToDouble(dis);
            }
            totalN = cartService.GetTotal() - discount;
            fullTotal = total + deliveryFee;
            StateHasChanged();
        }
        else
        {
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Enter Coupon Code!");
        }
    }

    private async void GetUserAddress(int customerId)
    {
        var customershipping = Task.Run(async () => await ProfileService.ShippingAddress(customerId));
        ShippingAddress = customershipping.Result;
        if (ShippingAddress.Count() > 0)
        {
            address = ShippingAddress[0].FullAddress;
            postalCode = ShippingAddress[0].PostalCode.ToString();
            city = ShippingAddress[0].AdCity;
            country = ShippingAddress[0].Country;
            StateHasChanged();
        }
    }

    private async void SetDeliveryFee(int type)
    {
        if (type == 1)
        {
            deliveryFee = await apiService.GetDeliveryFee(totalWeight,country, province);
            fullTotal = total + deliveryFee - discount;
            StateHasChanged();
        }
        else
        {
            deliveryFee = 0;
            fullTotal = total - discount;
        }
    }

    private void DeliveryTypeSelect()
    {
        if(deliveryType == 1)
        {
            SetDeliveryFee(1);
        }
        else
        {
            SetDeliveryFee(0);
        }
    }

    public async void ClearCart()
    {
        await localStore.RemoveItemAsync("cart");
    }

}
