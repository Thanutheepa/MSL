@page "/contact"

@inject ISearchProduct searchProduct
@inject ILocalStorageService localStore
@inject NavigationManager NavManager
@inject IProductService ProductService
@inject AppState appState
@inject IJSRuntime JSRuntime
@inject ISendEmails sendEmails
@using System.Text.RegularExpressions;

<div class="container topMargin mb-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><NavLink href="/" class="bread"><i class="fas fa-home"></i> Home</NavLink></li>
                    <li class="breadcrumb-item active" aria-current="page">Contact Us</li>
                </ol>
            </nav>

        </div>
    </div>
    <div class="row">
        <div class="col-md-9 col-lg-9">
            <div class="row">
                <div class="col-md-12 centerCol">
                    <div class="loginBox">@*#8B1E29;*@
                        <h1 class="headingNew">Contact <span class="redheading" style="color: #FFB554;">Us</span></h1>
                        @*Hidden*@
                        @*<p>
                            We’re happy to answer any questions you have. Just send us a message in the form below with any questions you may have.
                        </p>*@
                        <p class="footerParas mt-4"><i class="fas fa-map-marker-alt"></i> Address <br />&nbsp;&nbsp;&nbsp; Federation House, No. 17/1, 1st Lane, Gothami Road, Colombo 0080</p>
                        <p class="footerParas"><i class="fas fa-phone-alt"></i> TEL: <a class="text-dark" href="tel:0112867505">@*011 286 7505*@</a></p>
                        <p class="footerParas mb-4"><i class="fas fa-envelope-open">

                        </i> Email - <a class="text-dark" href="mailto: wanijalk@gmail.com"> wanijalk@gmail.com</a></p>
                        <div class="form-group m-3">
                            <div class="row">
                                <div class="col-md-5 col-12 mb-3">@*red*@
                                    <div class="row"><label>Name <span style="color:"#FF5454;">*</span></label></div>
                                    <div class="row" style="padding-right:5px"><input type="text" class="form-control" placeholder="Name *" @bind-value="name"></div>
                                </div>
                                <div class="col-md-5 col-12 mb-3">
                                    <div class="row"><label>Email <span style="color:"#FF5454;">*</span></label></div>
                                    <div class="row"><input type="email" class="form-control" placeholder="Email *" @bind-value="email"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 col-12 mb-3">
                                    <div class="row"><label>Subject <span style="color:"#FF5454;">*</span></label></div>
                                    <div class="row"><input type="text" class="form-control" placeholder="Subject *" @bind-value="subject"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 col-12 mb-3">
                                    <div class="row"><label>Message</label></div>
                                    <div class="row"><textarea rows="6" class="form-control" style="width:100%" @bind="msg"></textarea></div>
                                </div>
                            </div>
                            @if (error1 == true)
                            {
                                <div class="media">
                                    <label id="error1" style="width: 100%;display:none; color:"#FF5454;">Invalid captcha code. Please try again.</label>
                                </div>
                            }
                            @if (error2 == true)
                            {
                                <div class="media">
                                    <label style="width: 100%; display: none; color: "#FF5454;">System encountered an error. Please contact your system administrator.</label>
                                </div>
                            }
                            @if (!sent)
                            {
                                <div class="row">
                                    <div class="col-md-2 col-12"><button type="submit" class="btn checkoutBtn w-100" @onclick="SendMsg">Submit</button></div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-12 text-center">
                                        <img src="images/Loading.gif" width="50" />
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<RecentPosts />*@
    </div>
</div>

@code {
    private bool error1 = false;
    private bool error2 = false;

    private string name { get; set; }
    private string email { get; set; }
    private string msg { get; set; }
    private string subject { get; set; }
    private bool sent { get; set; } = false;

    private async void SendMsg()
    {
        sent = true;
        StateHasChanged();
        if (name == String.Empty || name == "" || name == null || email == String.Empty || email == "" || email == null || msg == String.Empty || msg == "" || msg == null || subject == String.Empty || subject == "" || subject == null)
        {
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the data");
            sent = false;
            StateHasChanged();
        }
        else if (EmailValidate(email) == false)
        {
            email = "";
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please check the email");
            sent = false;
            StateHasChanged();
        }

        else
        {
            await Task.Delay(TimeSpan.FromSeconds(1));
            var emailBody = sendEmails.GetEmailBodyContact(name, email, subject, msg);
            sendEmails.SendEmailContact(emailBody);
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "success", "", "Thank you for contacting us! We will get back to you soon!");
            name = "";
            email = "";
            msg = "";
            subject = "";
            sent = false;
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<object>("NavBarFixed");
            StateHasChanged();
        }
    }

    private bool EmailValidate(string email)
    {

        if (Regex.IsMatch(email, @"\A(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)\Z", RegexOptions.IgnoreCase))
        {
            return true;
        }
        else return false;
    }

}
