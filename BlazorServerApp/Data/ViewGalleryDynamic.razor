@page "/viewGallery/{id:int}/{title}"

@inject IJSRuntime JSRuntime
@inject IApiService apiService

<div class="container topMargin mb-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><NavLink href="/" class="bread"><i class="fas fa-home"></i> Home</NavLink></li>
                    <li class="breadcrumb-item active" aria-current="page">Gallery</li>
                </ol>
            </nav>

        </div>
    </div>
    <div class="row">
        <div class="col-md-9 col-lg-9">
            <div class="row">
                <div class="col-md-12">

                    <div class="terms-conditions" style="text-align:left">
                        <h1>@title</h1>
                    </div>
                    @if (galleyImages == null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {
                        @foreach (var galleryImage in galleyImages)
                        {

                            <div class="col-md-3 col-12" style=" float: left; width: 33.33%; padding: 5px;">
                                <img src="@galleryImage.imagePath" class="blogImg" data-toggle="modal" data-target="#myModal" @onclick='() => ChangeImage(galleryImage.imagePath)' />
                            </div>


                        }

                    }
                </div>
            </div>

        </div>
        <RecentPosts />
    </div>
</div>

<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <button type="button" class="close modalCloseBtn" data-dismiss="modal">&times;</button>
            <img src="@displayImg" width="100%" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    [Parameter]
    public string title { get; set; }

    private string displayImg { get; set; } = "";

    private List<GalleryItem> galleyImages { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<object>("NavBarFixed");
            await JSRuntime.InvokeAsync<object>("ClickImage");
            galleyImages = (await apiService.GetAllGalleryImages(id));
            StateHasChanged();
        }
    }

    private void ChangeImage(string img)
    {
        displayImg = img;
        StateHasChanged();
    }

}
