// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorServerApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\MSL\BlazorServerApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\MSL\BlazorServerApp\_Imports.razor"
using BlazorServerApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\MSL\BlazorServerApp\_Imports.razor"
using BlazorServerApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\MSL\BlazorServerApp\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\MSL\BlazorServerApp\_Imports.razor"
using BlazorServerApp.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.SearchProductScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.ViewProductScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.CartScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.LoginScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.CoreBusiness.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\MSL\BlazorServerApp\_Imports.razor"
using BlazorServerApp.Controls;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\MSL\BlazorServerApp\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\MSL\BlazorServerApp\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.RegisterScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "D:\MSL\BlazorServerApp\_Imports.razor"
using ShoppingCart.UseCases.FavProductScreen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "D:\MSL\BlazorServerApp\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "D:\MSL\BlazorServerApp\_Imports.razor"
using System.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "D:\MSL\BlazorServerApp\_Imports.razor"
using Microsoft.Extensions.Options;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "D:\MSL\BlazorServerApp\_Imports.razor"
using System.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\MSL\BlazorServerApp\Pages\LostPassword.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/forgetPassowrd/{verified}")]
    public partial class LostPassword : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 76 "D:\MSL\BlazorServerApp\Pages\LostPassword.razor"
       
    [Parameter]
    public string verified { get; set; }

    private string email = "";
    private string newPw = "";
    private string password = "";
    private string confirmPassword = "";
    private string iClassforPassword = "fas fa-eye-slash";
    private string passwordTypeforpassword = "password";
    private string iClassforconfirmPW = "fas fa-eye-slash";
    private string passwordTypeforconfirmPW = "password";

    private void HandlePasswordIcon()
    {
        if (iClassforPassword == "fas fa-eye-slash")
        {
            iClassforPassword = "fas fa-eye";
            passwordTypeforpassword = "text";
        }
        else
        {
            iClassforPassword = "fas fa-eye-slash";
            passwordTypeforpassword = "password";
        }
    }
    private void HandleConfirmPasswordIcon()
    {
        if (iClassforconfirmPW == "fas fa-eye-slash")
        {
            iClassforconfirmPW = "fas fa-eye";
            passwordTypeforconfirmPW = "text";
        }
        else
        {
            iClassforconfirmPW = "fas fa-eye-slash";
            passwordTypeforconfirmPW = "password";
        }
    }

    private async void onClick_Submit()
    {
        bool valid = true;
        if (email == "")
        {
            valid = false;
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the data");
        }
        else if (EmailValidate(email) == false)
        {
            valid = false;
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please enter correct email address");
        }

        if (valid)
        {
            var savelogin = Task.Run(async () => await RegisterService.LoginIdByUserName(email));
            int id = savelogin.Result;

            if (id > 0)
            {
                var resend = Task.Run(async () => await RegisterService.ResendOtp(id));
                bool send = resend.Result;

                if (send == true)
                {
                    await localStore.SetItemAsync("userIdforForgetPw", id);
                    string url = "/forgetPasswordOTP";
                    NavManager.NavigateTo(url);
                }

                else
                {
                    await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Unable to send OTP. Please check the email and try again");
                }
            }
            else
            {
                await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Invalid email address");
            }
        }
    }

    private async void Reset_Click()
    {
        bool valid = true;
        if(password == string.Empty || password == null || confirmPassword == string.Empty || confirmPassword == null)
        {
            valid = false;
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the data");
        }
        else if (string.Compare(password, confirmPassword) != 0)
        {
            valid = false;
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "password and confirm password are not matching");
        }


        else if (password.Length < 8 || confirmPassword.Length < 8)
        {
            valid = false;
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "password should contain more than 8 characters");
            password = "";
            confirmPassword = "";
        }

        if(valid)
        {
            var userid = await localStore.GetItemAsync<int>("userIdforForgetPw");
            var update = Task.Run(async () => await RegisterService.UpdatePasswordByUserId(userid,password));
            string result = update.Result;

            if(result == "Successfully Updated")
            {
                await JSRuntime.InvokeAsync<object>("ErrorAlert", "success", "", "Successfully Updated");
                NavManager.NavigateTo("/login/null");
            }
        }



    }

    private bool EmailValidate(string email)
    {

        if (Regex.IsMatch(email, @"\A(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)\Z", RegexOptions.IgnoreCase))
        {
            return true;
        }
        else return false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService localStore { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRegisterService RegisterService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
